# view configs here
# https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml

replicas: 1

# Administrator credentials when not using an existing secret (see below)
adminUser: redpanda
adminPassword: rules!!

## Configure grafana datasources
## ref: http://docs.grafana.org/administration/provisioning/#datasources
##
datasources:
 datasources.yaml:
   apiVersion: 1
   datasources:
   - name: Prometheus
     type: prometheus
     url: http://prometheus-server.prometheus.svc.cluster.local
     access: proxy
     isDefault: true

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  type: pvc
  enabled: true
  # storageClassName: default
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  # annotations: {}
  finalizers:
    - kubernetes.io/pvc-protection

## Configure grafana alerting (can be templated)
## ref: http://docs.grafana.org/administration/provisioning/#alerting
##
alerting: {}
#  rules.yaml: |
#    apiVersion: 1
#    groups:
#      - orgId: 1
#        name: {{ .Chart.Name }}_my_rule_group
#        folder: my_first_folder
#        interval: 60s
#        rules:
#          - uid: my_id_1
#            title: my_first_rule
#            condition: A
#            data:
#              - refId: A
#                datasourceUid: '-100'
#                model:
#                  conditions:
#                    - evaluator:
#                        params:
#                          - 3
#                        type: gt
#                      operator:
#                        type: and
#                      query:
#                        params:
#                          - A
#                      reducer:
#                        type: last
#                      type: query
#                  datasource:
#                    type: __expr__
#                    uid: '-100'
#                  expression: 1==0
#                  intervalMs: 1000
#                  maxDataPoints: 43200
#                  refId: A
#                  type: math
#            dashboardUid: my_dashboard
#            panelId: 123
#            noDataState: Alerting
#            for: 60s
#            annotations:
#              some_key: some_value
#            labels:
#              team: sre_team_1
#  contactpoints.yaml: |
#    apiVersion: 1
#    contactPoints:
#      - orgId: 1
#        name: cp_1
#        receivers:
#          - uid: first_uid
#            type: pagerduty
#            settings:
#              integrationKey: XXX
#              severity: critical
#              class: ping failure
#              component: Grafana
#              group: app-stack
#              summary: |
#                {{ `{{ template "default.message" . }}` }}

## Configure notifiers
## ref: http://docs.grafana.org/administration/provisioning/#alert-notification-channels
##
notifiers: {}
#  notifiers.yaml:
#    notifiers:
#    - name: email-notifier
#      type: email
#      uid: email1
#      # either:
#      org_id: 1
#      # or
#      org_name: Main Org.
#      is_default: true
#      settings:
#        addresses: an_email_address@example.com
#    delete_notifiers:
